# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Budget {
  _id: String!
  name: String!
  userEmail: String!
  amount: Float!
  startDate: DateTime!
  endDate: DateTime
  showInMenu: Boolean!
  sortOrder: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  expenses(endDate: DateTime!, startDate: DateTime!): [Expense!]!
  sum(endDate: DateTime!, startDate: DateTime!): [Aggregate!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Expense {
  _id: String!
  userEmail: String!
  place: String!
  date: DateTime!
  price: Float!
  reason: String!
  recurring: Boolean!
  recurUntil: DateTime
  tags: [String!]
  createdAt: DateTime!
  updatedAt: DateTime!
  budget(populate: Boolean!): Budget!
}

type Aggregate {
  budget: String!
  month: String!
  total: Float!
  place: String!
  tag: String!
  count: Float!
}

type Query {
  budgets: [Budget!]!
  activeBudgets: [Budget!]!
  budget(id: String!): Budget!
  expenses(tag: String): [Expense!]!
  expensesByDateRange(endDate: DateTime!, startDate: DateTime!): [Expense!]!
  expense(id: String!): Expense!
  aggregateSum(endDate: DateTime!, startDate: DateTime!): [Aggregate!]!
  aggregatePlaces: [Aggregate!]!
  aggregateTags: [Aggregate!]!
}

type Mutation {
  createBudget(sortOrder: Float!, showInMenu: Boolean!, endDate: DateTime, startDate: DateTime!, amount: Float!, name: String!): Budget!
  updateBudget(sortOrder: Float!, showInMenu: Boolean!, endDate: DateTime, startDate: DateTime!, amount: Float!, name: String!, id: String!): Budget!
  deleteBudget(id: String!): Budget!
  createExpense(budget: String!, tags: [String!], recurUntil: DateTime, recurring: Boolean!, reason: String!, date: DateTime!, price: Float!, place: String!): Expense!
  updateExpense(budget: String!, tags: [String!], recurUntil: DateTime, recurring: Boolean!, reason: String!, date: DateTime!, price: Float!, place: String!, id: String!): Expense!
  deleteExpense(id: String!): Expense!
}
